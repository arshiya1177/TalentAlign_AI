import requests
from openai import OpenAI
from dotenv import load_dotenv
import os

# Load env vars (make sure OPENAI_API_KEY is set)
load_dotenv()
client = OpenAI()

QDRANT_URL = "https://qdrant-az-dev.smartx.services"
QDRANT_API_KEY = "smartx-dev"
COLLECTION_NAME = "my_new_collection"  # or your shared collection name

HEADERS = {
    "Content-Type": "application/json",
    "api-key": QDRANT_API_KEY
}

# --- Embedding any sample text (e.g., resume)
def get_embedding(text):
    response = client.embeddings.create(
        input=text,
        model="text-embedding-3-small"
    )
    return response.data[0].embedding

# --- Searching Qdrant using vector
def search_qdrant(vector, top_k=3):
    url = f"{QDRANT_URL}/collections/{COLLECTION_NAME}/points/search"
    payload = {
        "vector": vector,
        "top": top_k,
        "with_payload": True
    }
    response = requests.post(url, headers=HEADERS, json=payload)
    return response.json()

# --- Main test
if __name__ == "__main__":
    sample_resume_text = "Data scientist with Python, machine learning, and NLP experience."
    embedding = get_embedding(sample_resume_text)
    results = search_qdrant(embedding)

    print("\nüîç Top JD Matches from Shared Collection:\n")
    for item in results.get("result", []):
        print(f"- Title: {item['payload'].get('name', 'N/A')}")
        print(f"  Description: {item['payload'].get('description', '')[:100]}...")
        print(f"  Score: {item['score']}")
        print("--------------------------------------------------")
